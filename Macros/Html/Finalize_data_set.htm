<!doctype html public "-//w3c//dtd html 4.0 final//en">
<html>
   <head>
      <title>C:\DCData\SAS\Macros\Finalize_data_set.sas</title>
   </head>
   <body>
      <pre>
/**************************************************************************
 Macro:  Finalize_data_set.sas
 Library:  Macros
 Project:  NeighborhoodInfo DC
 Author:   P. Tatian
 Created:  11/05/16
 Version:  SAS 9.2
 Environment:  Local Windows session (desktop)
 
 Description:  Autocall macro to finalize SAS data set in DCData.

 Modifications:
**************************************************************************/

/** Macro Finalize_data_set - Start Definition **/

%macro Finalize_data_set( 
  /** Finalize data set parameters **/
  data=,      /** Input temporary data set (required) **/
  out=,       /** Ouput data set name (required) **/
  outlib=,    /** Output data set library (required) **/
  label=,     /** Output data set label, in quotes (required) **/
  sortby=,    /** Output data set sorting variables (optional) **/
  archive=N,  /** Add output data set to archive (Y/N) **/
  archive_name=,  /** Name of data set archive (default is batch submit program name) **/
  /** Metadata parameters **/
  register_metadata=Y,        /** Register file with metadata system (Y/N) **/
  creator_process=&amp;_program,  /** Metadata creator process (default is batch submit program name) **/
  restrictions=None,          /** Metadata file restrictions **/
  revisions=,                 /** Metadata file revisions (required) **/
  /** File info parameters **/
  contents=Y,                 /** Print data set Proc Contents (Y/N) **/
  printobs=10,                /** Number of data set observations to print **/
  printchar=N,                /** Print character vars only (Y/N) **/
  printvars=,                 /** Data set vars to print (default is all) **/
  freqvars=,                  /** Data set vars for frequency tables (default is none) **/
  stats=n sum mean stddev min max    /** Descriptive statistics **/
  );

  %note_mput( macro=Finalize_data_set, msg=Starting macro. )

  %** Check parameters **;
  
  %if %length( &amp;data ) = 0 %then %do;
    %err_mput( macro=Finalize_data_set, msg=Input data set not specified (data=). )
    %goto exit;
  %end;
  
  %if %length( &amp;out ) = 0 %then %do;
    %err_mput( macro=Finalize_data_set, msg=Output data set not specified (out=). )
    %goto exit;
  %end;

  %if %length( &amp;outlib ) = 0 %then %do;
    %err_mput( macro=Finalize_data_set, msg=Output library not specified (outlib=). )
    %goto exit;
  %end;
  
  %if %length( &amp;label ) = 0 %then %do;
    %err_mput( macro=Finalize_data_set, msg=Output data set label not specified (label="..."). )
    %goto exit;
  %end;
    
  %if not( %mparam_is_yes( &amp;archive ) or %mparam_is_no( &amp;archive ) ) %then %do;
    %err_mput( macro=Finalize_data_set, msg=Archive= must be specified as Y/N. (archive=%str(&amp;archive)). )
    %goto exit;
  %end;
  
  %if %length( &amp;creator_process ) = 0 %then %do;
    %err_mput( macro=Finalize_data_set, msg=Creator process not specified (creator_process=). )
    %goto exit;
  %end;
  
  %if %length( &amp;revisions ) = 0 %then %do;
    %err_mput( macro=Finalize_data_set, msg=Revisions not specified (revisions=). )
    %goto exit;
  %end;
  
  %** Check for existance of input data set **;
  
  %if not( %Dataset_exists( &amp;data ) ) %then %do;
    %err_mput( macro=Finalize_data_set, msg=Input data set %str(%upcase(&amp;data)) does not exist. )
    %goto exit;
  %end;
  
  %** Finalize data set **;
  
  %if &amp;_remote_batch_submit %then %do;
  
    %note_mput( macro=Finalize_data_set, msg=Remote batch submit. Data set will be finalized. )

    %if %Dataset_exists( &amp;outlib..&amp;out ) %then %do;
      %warn_mput( macro=Finalize_data_set, msg=Existing data set %str(%upcase(&amp;outlib..&amp;out)) will be replaced. )
    %end;
  
    %if %length( &amp;sortby ) &gt; 0 %then %do;
    
      ** Sort to final data set and label **;
      
      proc sort data=&amp;data out=&amp;outlib..&amp;out (label=&amp;label);
        by &amp;sortby;
      run;
      
    %end;
    %else %do;
    
      ** Copy and label data set **;
      
      data &amp;outlib..&amp;out (label=&amp;label);
        set &amp;data;
      run;
      
    %end;

    ** Print file info **;
    
    %File_info(
      data=&amp;outlib..&amp;out,
      contents=&amp;contents,
      printobs=&amp;printobs,
      printchar=&amp;printchar,
      printvars=&amp;printvars,
      freqvars=&amp;freqvars,
      stats=&amp;stats
    )
  
    %** Archive data set **;
    
    %if %mparam_is_yes( &amp;archive ) %then %do;
    
      %if %length( &amp;archive_name ) = 0 %then %let archive_name = %scan( &amp;_program, 1, . );

      %note_mput( macro=Finalize_data_set, msg=Final data set will be added to %str(%upcase(&amp;archive_name)) archive. )

      %Archive_data_sets( data=&amp;out, lib=&amp;outlib, zip_pre=&amp;archive_name, zip_suf=, overwrite=y, quiet=y )      

    %end;
    
    %if %mparam_is_yes( &amp;register_metadata ) %then %do;
    
      ** Add to metadata **;
      
      %Dc_update_meta_file(
        ds_lib=&amp;outlib,
        ds_name=&amp;out,
        creator_process=&amp;creator_process,
        restrictions=&amp;restrictions,
        revisions=%str(&amp;revisions)
      )
    
    %end;
    
  %end;
  %else %do;
  
    %note_mput( macro=Finalize_data_set, msg=Not remote batch submit. Data set will not be finalized. )

    %if %Dataset_exists( &amp;outlib..&amp;out ) %then %do;
      %warn_mput( macro=Finalize_data_set, msg=Existing data set %str(%upcase(&amp;outlib..&amp;out)) will be replaced on remote batch submit. )
    %end;

    %if %length( &amp;sortby ) &gt; 0 %then %do;
    
      ** Sort and label temporary data set **;
      
      proc sort data=&amp;data (label=&amp;label);
        by &amp;sortby;
      run;
      
    %end;
    %else %do;
    
      data &amp;data (label=&amp;label);
        set &amp;data;
      run;
      
    %end;
      
    %File_info(
      data=&amp;data,
      contents=&amp;contents,
      printobs=&amp;printobs,
      printchar=&amp;printchar,
      printvars=&amp;printvars,
      freqvars=&amp;freqvars,
      stats=&amp;stats
    )
  
  %end;

  %exit:
  
  %note_mput( macro=Finalize_data_set, msg=Exiting macro. )

%mend Finalize_data_set;

/** End Macro Definition **/

      </pre>
   </body>
</html>
